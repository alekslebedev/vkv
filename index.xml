<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vkv documentation on vkv</title><link>https://falcosuessgott.github.io/vkv/</link><description>Recent content in vkv documentation on vkv</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://falcosuessgott.github.io/vkv/index.xml" rel="self" type="application/rss+xml"/><item><title>compare KVv2 engines</title><link>https://falcosuessgott.github.io/vkv/09_advanced_examples/diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/09_advanced_examples/diff/</guid><description>vkv can be used to compare secrets across Vault servers or KV engines.
&amp;#34;diff -ty &amp;lt;(vkv export --p=secret --show-values) &amp;lt;(vkv export -p=secret_2 --show-values)&amp;#34; Here is an example using diff, the | indicates the changed entry per line:
Demo</description></item><item><title>output formats</title><link>https://falcosuessgott.github.io/vkv/05_export/formats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/05_export/formats/</guid><description>base vkv export -p secret -f=base secret/ ├── v1: admin [key=value] │ └── sub=******** ├── v1: demo │ └── foo=*** └── sub/ ├── v1: demo │ ├── demo=*********** │ ├── password=****** │ └── user=***** └── sub2 └── v2: demo [admin=false key=value] ├── admin=*** ├── foo=*** ├── password=******** └── user=**** yaml vkv export -p secret -f=yaml secret/: admin: sub: &amp;#39;********&amp;#39; demo: foo: &amp;#39;***&amp;#39; sub/: demo: demo: &amp;#39;***********&amp;#39; password: &amp;#39;******&amp;#39; user: &amp;#39;*****&amp;#39; sub2/: demo: admin: &amp;#39;***&amp;#39; foo: &amp;#39;***&amp;#39; password: &amp;#39;********&amp;#39; user: &amp;#39;****&amp;#39; json vkv export -p secret -f=json { &amp;#34;secret/&amp;#34;: { &amp;#34;admin&amp;#34;: { &amp;#34;sub&amp;#34;: &amp;#34;********&amp;#34; }, &amp;#34;demo&amp;#34;: { &amp;#34;foo&amp;#34;: &amp;#34;***&amp;#34; }, &amp;#34;sub/&amp;#34;: { &amp;#34;demo&amp;#34;: { &amp;#34;demo&amp;#34;: &amp;#34;***********&amp;#34;, &amp;#34;password&amp;#34;: &amp;#34;******&amp;#34;, &amp;#34;user&amp;#34;: &amp;#34;*****&amp;#34; }, &amp;#34;sub2/&amp;#34;: { &amp;#34;demo&amp;#34;: { &amp;#34;admin&amp;#34;: &amp;#34;***&amp;#34;, &amp;#34;foo&amp;#34;: &amp;#34;***&amp;#34;, &amp;#34;password&amp;#34;: &amp;#34;********&amp;#34;, &amp;#34;user&amp;#34;: &amp;#34;****&amp;#34; } } } } } export vkv export -p secret -f=export export admin=&amp;#39;key&amp;#39; export demo=&amp;#39;hello world&amp;#39; export foo=&amp;#39;bar&amp;#39; export password=&amp;#39;password&amp;#39; export sub=&amp;#39;password&amp;#39; eval $(vkv export -p secret -f=export) echo $admin key policy vkv export -p secret -f=policy PATH CREATE READ UPDATE DELETE LIST ROOT secret/sub/sub2/demo ✖ ✖ ✖ ✖ ✖ ✔ secret/admin ✖ ✖ ✖ ✖ ✖ ✔ secret/demo ✖ ✖ ✖ ✖ ✖ ✔ secret/sub/demo ✖ ✖ ✖ ✖ ✖ ✔ markdown vkv export -p secret -f=markdown | PATH | KEY | VALUE | VERSION | METADATA | |----------------------|----------|-------------|---------|-----------------------| | secret/admin | sub | ******** | 1 | key=value | | secret/demo | foo | *** | 1 | | | secret/sub/demo | demo | *********** | 1 | | | | password | ****** | | | | | user | ***** | | | | secret/sub/sub2/demo | admin | *** | 2 | admin=false key=value | | | foo | *** | | | | | password | ******** | | | | | user | **** | | |</description></item><item><title>browse all KVv2 engines</title><link>https://falcosuessgott.github.io/vkv/09_advanced_examples/fzf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/09_advanced_examples/fzf/</guid><description>using vault secrets list and a little bit of jq-logic, we can get a list of all KV-engines visible for the token.
If we pipe this into fzf we can get a handy little preview-app:
vkv list engines --all --include-ns-prefix | fzf --preview &amp;#39;vkv export -e ${}&amp;#39; Demo</description></item><item><title>encrypt &amp; decrypt using sops</title><link>https://falcosuessgott.github.io/vkv/09_advanced_examples/sops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/09_advanced_examples/sops/</guid><description>In order to store the secret export created by vkv sops can be used. This example shows how to encrypt &amp;amp; decrypt vkv exported secrets using sops and Vaults transit engine:
Prerequisites Install sops Demo export VAULT_ADDR=&amp;#34;https://vault.server&amp;#34; export VAULT_TOKEN=&amp;#34;hvs.XXXX&amp;#34; # enable engine and create encryption key vault secrets enable -path=sops transit vault write sops/keys/vkv type=rsa-4096 # export secrets as yaml and write to file vkv export -p secret --show-values -f=yaml &amp;gt; export.</description></item></channel></rss>