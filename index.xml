<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home title on vkv</title><link>https://falcosuessgott.github.io/vkv/</link><description>Recent content in Home title on vkv</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://falcosuessgott.github.io/vkv/index.xml" rel="self" type="application/rss+xml"/><item><title>Base</title><link>https://falcosuessgott.github.io/vkv/export/formats/base/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/base/</guid><description/></item><item><title>Usage</title><link>https://falcosuessgott.github.io/vkv/export/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/usage/</guid><description>vkv flags can be divided into input, modifying and output format flags.
Input flags Flag Description Env Default -p, --path KVv2 Engine path VKV_PATH -e, --engine-path This flag is only required if your kv-engine contains a /, which is used by vkv internally for splitting the secret paths, vkv will then append the values of the path-flag to the engine path, if specified (&amp;lt;engine-path&amp;gt;/&amp;lt;path&amp;gt;) VKV_ENGINE_PATH Modifying flags Flag Description Env Default --only-keys show only keys VKV_ONLY_KEYS false --only-paths show only paths VKV_ONLY_PATHS false --show-values don&amp;rsquo;t mask values VKV_SHOW_VALUES false --max-value-length maximum char length of values (set to -1 for disabling) VKV_MAX_VALUE_LENGTH 12 --template-file path to a file containing Go-template syntax to render the KV entries VKV_TEMPLATE_FILE --template-string string containing Go-template syntax to render KV entries VKV_TEMPLATE_STRING Output flags Flag Description Env Default -f, --format output format (options: base, yaml, policy, json, export, markdown, template) VKV_FORMAT base ⚠️ A flag always precede its environment variable</description></item><item><title>Usage</title><link>https://falcosuessgott.github.io/vkv/import/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/import/usage/</guid><description>Using vkv import -, tells vkv do read data via STDIN. The idea of vkv import - is, in order to copy/mirror KV-v2 secrets or complete engines across diferrent Vault Servers or Namespaces, you can simply pipe vkvs output into the vkv import command:
# dont forget to use --show-values, otherwise the secrets will be uploaded masked. vkv -p &amp;lt;source&amp;gt; --show-values -f=yaml | vkv import - -p &amp;lt;destination&amp;gt; A few notes: &amp;lt;source&amp;gt; and &amp;lt;destinations&amp;gt; dont have to be the root path of a secret engine, you also specify subpaths and copy them another secret engine.</description></item><item><title>JSON</title><link>https://falcosuessgott.github.io/vkv/export/formats/json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/json/</guid><description/></item><item><title>YAML</title><link>https://falcosuessgott.github.io/vkv/export/formats/yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/yaml/</guid><description/></item><item><title>Markdown</title><link>https://falcosuessgott.github.io/vkv/export/formats/markdown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/markdown/</guid><description/></item><item><title>Token Policy Matrix</title><link>https://falcosuessgott.github.io/vkv/export/formats/token_policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/token_policy/</guid><description/></item><item><title>Compare and highlight the differences using diff</title><link>https://falcosuessgott.github.io/vkv/export/advanced_examples/diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/advanced_examples/diff/</guid><description>vkv can be used to compare secrets across Vault servers or KV engines.
Here is an example using diff, the | indicates the changed entry per line:</description></item><item><title>Export</title><link>https://falcosuessgott.github.io/vkv/export/formats/export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/export/</guid><description/></item><item><title>Template</title><link>https://falcosuessgott.github.io/vkv/export/formats/template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/formats/template/</guid><description/></item><item><title>Generate Vault policies using the template format</title><link>https://falcosuessgott.github.io/vkv/export/advanced_examples/vault_policies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/advanced_examples/vault_policies/</guid><description>vkv can be used to generate policies from an existing KV path. When using the template output format, all the data is passed to STDOUT as a
map[string][]entry where entry is a struct of
type entry struct { Key string Value interface{} } Which means you can iterate over the map, where the map-key is the secret path and iterate again over the slice of entries in order to access the key and value of the secret (also see assets/template.</description></item><item><title>Show all KV-engines and secrets the using fzf and jq</title><link>https://falcosuessgott.github.io/vkv/export/advanced_examples/fzf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://falcosuessgott.github.io/vkv/export/advanced_examples/fzf/</guid><description>using vault secrets list and a little bit of jq-logic (see assets/fzf.sh) we can get a list of all KV-engines visible for the token. If we pipe this into fzf we can get a handy little preview-app:</description></item></channel></rss>